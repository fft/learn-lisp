;;;;test framework from 'practical common lisp'
(defvar *test-name* nil)

(defmacro deftest (name parameters &body body)
  `(defun ,name ,parameters
     (let ((*test-name* (append *test-name* (list ',name))))
       ,@body)))

(defmacro combine-result (&body forms)
  "Combine the results (as booleans) of 'forms' in order"
  (with-gensyms (result)
    `(let ((result t))
       ,@(loop for f in forms collect `(unless ,f (setf ,result nil)))
       ,result)))

(defun report-result (result form)
  (format t "~:[fail~;pass] ... ~a: ~a~%" result *test-name* form)
  result)

(defmacro check (&body forms)
  `(combine-result
    ,@(loop for f in forms collect `(report-result ,f ',f))))

